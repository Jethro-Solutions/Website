{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/components/hero/hero-animation.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRef, useEffect } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { OrbitControls, Environment, useGLTF, Float } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\n// Simple animated mesh that will serve as a placeholder\r\nfunction AnimatedMesh() {\r\n  const meshRef = useRef<THREE.Mesh>(null);\r\n  \r\n  useFrame((state, delta) => {\r\n    if (meshRef.current) {\r\n      meshRef.current.rotation.x += delta * 0.2;\r\n      meshRef.current.rotation.y += delta * 0.3;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Float speed={2} rotationIntensity={0.5} floatIntensity={1}>\r\n      <mesh ref={meshRef} castShadow receiveShadow>\r\n        <icosahedronGeometry args={[1, 1]} />\r\n        <meshStandardMaterial color=\"#E8E0D5\" roughness={0.5} metalness={0.2} />\r\n      </mesh>\r\n    </Float>\r\n  );\r\n}\r\n\r\n// Main hero animation component\r\nexport default function HeroAnimation() {\r\n  return (\r\n    <div className=\"w-full h-[50vh] bg-soft-black\">\r\n      <Canvas shadows camera={{ position: [0, 0, 5], fov: 50 }}>\r\n        <ambientLight intensity={0.5} />\r\n        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} castShadow />\r\n        <pointLight position={[-10, -10, -10]} />\r\n        \r\n        <AnimatedMesh />\r\n        \r\n        <Environment preset=\"city\" />\r\n        <OrbitControls enableZoom={false} enablePan={false} />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAJA;;;;;AAOA,wDAAwD;AACxD,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAc;IAEnC,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,OAAO;QACf,IAAI,QAAQ,OAAO,EAAE;YACnB,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ;YACtC,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ;QACxC;IACF;IAEA,qBACE,8OAAC,yJAAA,CAAA,QAAK;QAAC,OAAO;QAAG,mBAAmB;QAAK,gBAAgB;kBACvD,cAAA,8OAAC;YAAK,KAAK;YAAS,UAAU;YAAC,aAAa;;8BAC1C,8OAAC;oBAAoB,MAAM;wBAAC;wBAAG;qBAAE;;;;;;8BACjC,8OAAC;oBAAqB,OAAM;oBAAU,WAAW;oBAAK,WAAW;;;;;;;;;;;;;;;;;AAIzE;AAGe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,mMAAA,CAAA,SAAM;YAAC,OAAO;YAAC,QAAQ;gBAAE,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;gBAAE,KAAK;YAAG;;8BACrD,8OAAC;oBAAa,WAAW;;;;;;8BACzB,8OAAC;oBAAU,UAAU;wBAAC;wBAAI;wBAAI;qBAAG;oBAAE,OAAO;oBAAM,UAAU;oBAAG,UAAU;;;;;;8BACvE,8OAAC;oBAAW,UAAU;wBAAC,CAAC;wBAAI,CAAC;wBAAI,CAAC;qBAAG;;;;;;8BAErC,8OAAC;;;;;8BAED,8OAAC,+JAAA,CAAA,cAAW;oBAAC,QAAO;;;;;;8BACpB,8OAAC,iKAAA,CAAA,gBAAa;oBAAC,YAAY;oBAAO,WAAW;;;;;;;;;;;;;;;;;AAIrD","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/components/background/abstract-background.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRef, useMemo } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { Points, PointMaterial } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\nfunction ParticleField({ count = 5000, color = '#E8E0D5' }) {\r\n  const points = useRef<THREE.Points>(null);\r\n  \r\n  // Generate random positions for particles\r\n  const particles = useMemo(() => {\r\n    const positions = new Float32Array(count * 3);\r\n    for (let i = 0; i < count; i++) {\r\n      positions[i * 3] = (Math.random() - 0.5) * 10;     // x\r\n      positions[i * 3 + 1] = (Math.random() - 0.5) * 10;  // y\r\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 10;  // z\r\n    }\r\n    return positions;\r\n  }, [count]);\r\n\r\n  // Animate particles\r\n  useFrame((state, delta) => {\r\n    if (points.current) {\r\n      points.current.rotation.x += delta * 0.05;\r\n      points.current.rotation.y += delta * 0.01;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Points ref={points} positions={particles}>\r\n      <PointMaterial\r\n        transparent\r\n        color={color}\r\n        size={0.02}\r\n        sizeAttenuation={true}\r\n        depthWrite={false}\r\n        opacity={0.4}\r\n      />\r\n    </Points>\r\n  );\r\n}\r\n\r\ninterface AbstractBackgroundProps {\r\n  color?: string;\r\n  particleCount?: number;\r\n  className?: string;\r\n}\r\n\r\nexport default function AbstractBackground({\r\n  color = '#E8E0D5',\r\n  particleCount = 5000,\r\n  className = 'w-full h-[40vh]'\r\n}: AbstractBackgroundProps) {\r\n  return (\r\n    <div className={`${className} bg-soft-black`}>\r\n      <Canvas camera={{ position: [0, 0, 5], fov: 50 }}>\r\n        <ParticleField count={particleCount} color={color} />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAAA;AAJA;;;;;AAOA,SAAS,cAAc,EAAE,QAAQ,IAAI,EAAE,QAAQ,SAAS,EAAE;IACxD,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAgB;IAEpC,0CAA0C;IAC1C,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACxB,MAAM,YAAY,IAAI,aAAa,QAAQ;QAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,IAAQ,IAAI;YACvD,SAAS,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,IAAK,IAAI;YACxD,SAAS,CAAC,IAAI,IAAI,EAAE,GAAG,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI,IAAK,IAAI;QAC1D;QACA,OAAO;IACT,GAAG;QAAC;KAAM;IAEV,oBAAoB;IACpB,CAAA,GAAA,+MAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,OAAO;QACf,IAAI,OAAO,OAAO,EAAE;YAClB,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ;YACrC,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ;QACvC;IACF;IAEA,qBACE,8OAAC,0JAAA,CAAA,SAAM;QAAC,KAAK;QAAQ,WAAW;kBAC9B,cAAA,8OAAC,iKAAA,CAAA,gBAAa;YACZ,WAAW;YACX,OAAO;YACP,MAAM;YACN,iBAAiB;YACjB,YAAY;YACZ,SAAS;;;;;;;;;;;AAIjB;AAQe,SAAS,mBAAmB,EACzC,QAAQ,SAAS,EACjB,gBAAgB,IAAI,EACpB,YAAY,iBAAiB,EACL;IACxB,qBACE,8OAAC;QAAI,WAAW,GAAG,UAAU,cAAc,CAAC;kBAC1C,cAAA,8OAAC,mMAAA,CAAA,SAAM;YAAC,QAAQ;gBAAE,UAAU;oBAAC;oBAAG;oBAAG;iBAAE;gBAAE,KAAK;YAAG;sBAC7C,cAAA,8OAAC;gBAAc,OAAO;gBAAe,OAAO;;;;;;;;;;;;;;;;AAIpD","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/components/data-viz/financial-graph.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useRef, useMemo, useState, useEffect } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { Line, Text, OrbitControls } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Generate simulated financial data\r\nfunction generateFinancialData(numPoints = 50, volatility = 0.2): number[][] {\r\n  const points: number[][] = [];\r\n  let value = 100; // Starting value\r\n  \r\n  for (let i = 0; i < numPoints; i++) {\r\n    // Random walk with trend\r\n    const change = (Math.random() - 0.5) * volatility * value;\r\n    value += change;\r\n    value = Math.max(10, value); // Ensure we don't go below 10\r\n    points.push([i / 10, value / 100, 0]); // Scale for visualization\r\n  }\r\n  \r\n  return points;\r\n}\r\n\r\ninterface Graph3DProps {\r\n  data: number[][];\r\n  color?: string;\r\n  animated?: boolean;\r\n}\r\n\r\nfunction Graph3D({ data, color = '#E8E0D5', animated = true }: Graph3DProps) {\r\n  const lineRef = useRef<THREE.Group>(null);\r\n  const [displayData, setDisplayData] = useState(data.slice(0, 2));\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n  \r\n  // Animate the line drawing effect when component mounts\r\n  useEffect(() => {\r\n    if (animated && !animationComplete) {\r\n      let currentLength = 2;\r\n      const interval = setInterval(() => {\r\n        if (currentLength <= data.length) {\r\n          setDisplayData(data.slice(0, currentLength));\r\n          currentLength += 1;\r\n        } else {\r\n          clearInterval(interval);\r\n          setAnimationComplete(true);\r\n        }\r\n      }, 50);\r\n      \r\n      return () => clearInterval(interval);\r\n    } else if (!animated) {\r\n      setDisplayData(data);\r\n      setAnimationComplete(true);\r\n    }\r\n  }, [data, animated, animationComplete]);\r\n  \r\n  // Gentle floating animation\r\n  useFrame((state, delta) => {\r\n    if (lineRef.current && animationComplete) {\r\n      lineRef.current.rotation.z = Math.sin(state.clock.elapsedTime * 0.3) * 0.05;\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <group ref={lineRef}>\r\n      {/* Graph line */}\r\n      <Line\r\n        points={displayData}\r\n        color={color}\r\n        lineWidth={2}\r\n      />\r\n      \r\n      {/* Axes */}\r\n      <Line \r\n        points={[[0, 0, 0], [5, 0, 0]]} \r\n        color=\"white\" \r\n        opacity={0.5} \r\n        transparent \r\n      />\r\n      <Line \r\n        points={[[0, 0, 0], [0, 1, 0]]} \r\n        color=\"white\" \r\n        opacity={0.5} \r\n        transparent \r\n      />\r\n      \r\n      {/* Labels */}\r\n      <Text\r\n        position={[5.2, 0, 0]}\r\n        fontSize={0.2}\r\n        color=\"white\"\r\n      >\r\n        time\r\n      </Text>\r\n      \r\n      <Text\r\n        position={[0, 1.2, 0]}\r\n        fontSize={0.2}\r\n        color=\"white\"\r\n      >\r\n        value\r\n      </Text>\r\n    </group>\r\n  );\r\n}\r\n\r\ninterface FinancialGraphProps {\r\n  volatility?: number;\r\n  dataPoints?: number;\r\n  color?: string;\r\n  animated?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport default function FinancialGraph({\r\n  volatility = 0.2,\r\n  dataPoints = 50,\r\n  color = '#E8E0D5',\r\n  animated = true,\r\n  className = 'w-full h-[40vh]'\r\n}: FinancialGraphProps) {\r\n  // Generate data once when component mounts\r\n  const data = useMemo(() => generateFinancialData(dataPoints, volatility), \r\n    [dataPoints, volatility]);\r\n  \r\n  return (\r\n    <motion.div \r\n      className={`${className} bg-soft-black rounded-lg`}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Canvas camera={{ position: [3, 2, 5], fov: 50 }}>\r\n        <ambientLight intensity={0.5} />\r\n        <pointLight position={[10, 10, 10]} />\r\n        \r\n        <Graph3D data={data} color={color} animated={animated} />\r\n        \r\n        <OrbitControls \r\n          enableZoom={false} \r\n          enablePan={false}\r\n          maxPolarAngle={Math.PI / 2}\r\n          minPolarAngle={Math.PI / 4}\r\n        />\r\n      </Canvas>\r\n    </motion.div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/components/animations/scroll-section.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ReactNode, useRef, useEffect } from 'react';\r\nimport { motion, useScroll, useTransform, useSpring, useInView } from 'framer-motion';\r\n\r\ninterface ScrollSectionProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  direction?: 'up' | 'down' | 'left' | 'right';\r\n  delay?: number;\r\n  duration?: number;\r\n  threshold?: number;\r\n  once?: boolean;\r\n}\r\n\r\nexport function FadeInSection({\r\n  children,\r\n  className = '',\r\n  direction = 'up',\r\n  delay = 0,\r\n  duration = 0.5,\r\n  threshold = 0.2,\r\n  once = true,\r\n}: ScrollSectionProps) {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const isInView = useInView(ref, { once, amount: threshold });\r\n  \r\n  // Set initial and animate values based on direction\r\n  const getInitialProps = () => {\r\n    switch (direction) {\r\n      case 'up':\r\n        return { y: 40, opacity: 0 };\r\n      case 'down':\r\n        return { y: -40, opacity: 0 };\r\n      case 'left':\r\n        return { x: 40, opacity: 0 };\r\n      case 'right':\r\n        return { x: -40, opacity: 0 };\r\n      default:\r\n        return { y: 0, opacity: 0 };\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      className={className}\r\n      initial={getInitialProps()}\r\n      animate={isInView ? { x: 0, y: 0, opacity: 1 } : getInitialProps()}\r\n      transition={{ duration, delay, ease: 'easeOut' }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n}\r\n\r\ninterface ParallaxSectionProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  speed?: number; // Parallax speed factor (higher is faster)\r\n  direction?: 'up' | 'down';\r\n}\r\n\r\nexport function ParallaxSection({\r\n  children,\r\n  className = '',\r\n  speed = 0.2,\r\n  direction = 'up',\r\n}: ParallaxSectionProps) {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { scrollYProgress } = useScroll({\r\n    target: ref,\r\n    offset: ['start end', 'end start']\r\n  });\r\n  \r\n  // Apply spring physics for smoother motion\r\n  const smoothProgress = useSpring(scrollYProgress, { \r\n    stiffness: 100, \r\n    damping: 30 \r\n  });\r\n  \r\n  // Translate based on scroll progress\r\n  const y = useTransform(\r\n    smoothProgress, \r\n    [0, 1], \r\n    [0, direction === 'up' ? -100 * speed : 100 * speed]\r\n  );\r\n  \r\n  return (\r\n    <div ref={ref} className={`relative overflow-hidden ${className}`}>\r\n      <motion.div style={{ y }} className=\"h-full w-full\">\r\n        {children}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface StaggeredChildrenProps {\r\n  children: ReactNode[];\r\n  className?: string;\r\n  staggerDelay?: number;\r\n  childClassName?: string;\r\n  once?: boolean;\r\n  threshold?: number;\r\n}\r\n\r\nexport function StaggeredChildren({\r\n  children,\r\n  className = '',\r\n  staggerDelay = 0.1,\r\n  childClassName = '',\r\n  once = true,\r\n  threshold = 0.2,\r\n}: StaggeredChildrenProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const isInView = useInView(containerRef, { once, amount: threshold });\r\n  \r\n  const container = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: staggerDelay,\r\n        delayChildren: 0.1,\r\n      }\r\n    }\r\n  };\r\n  \r\n  const item = {\r\n    hidden: { y: 20, opacity: 0 },\r\n    show: { y: 0, opacity: 1 }\r\n  };\r\n  \r\n  return (\r\n    <motion.div\r\n      ref={containerRef}\r\n      className={className}\r\n      variants={container}\r\n      initial=\"hidden\"\r\n      animate={isInView ? \"show\" : \"hidden\"}\r\n    >\r\n      {Array.isArray(children) && children.map((child, index) => (\r\n        <motion.div\r\n          key={index}\r\n          className={childClassName}\r\n          variants={item}\r\n          transition={{ \r\n            duration: 0.5, \r\n            ease: \"easeOut\" \r\n          }}\r\n        >\r\n          {child}\r\n        </motion.div>\r\n      ))}\r\n    </motion.div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/components/animations/hover-effects.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { ReactNode, useState, useRef } from 'react';\r\nimport { motion, useMotionValue, useSpring, useTransform } from 'framer-motion';\r\n\r\ninterface HoverCard3DProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  depth?: number;\r\n  glareIntensity?: number;\r\n  rotationFactor?: number;\r\n  bgColor?: string;\r\n  borderColor?: string;\r\n}\r\n\r\n// 3D hover card with tilt effect\r\nexport function HoverCard3D({\r\n  children,\r\n  className = '',\r\n  depth = 10,\r\n  glareIntensity = 0.2,\r\n  rotationFactor = 15,\r\n  bgColor = 'bg-soft-black',\r\n  borderColor = 'border-soft-tan/20',\r\n}: HoverCard3DProps) {\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n  \r\n  // Add spring physics for smoother motion\r\n  const springConfig = { damping: 30, stiffness: 300 };\r\n  const rotateX = useSpring(useTransform(y, [-0.5, 0.5], [rotationFactor, -rotationFactor]), springConfig);\r\n  const rotateY = useSpring(useTransform(x, [-0.5, 0.5], [-rotationFactor, rotationFactor]), springConfig);\r\n  \r\n  // Reference for the card container\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  \r\n  // State for glare positioning\r\n  const [glarePosition, setGlarePosition] = useState({ x: 0, y: 0 });\r\n  \r\n  // Handle mouse move on card\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (!ref.current) return;\r\n    \r\n    const rect = ref.current.getBoundingClientRect();\r\n    \r\n    // Calculate the position relative to the card (0 to 1)\r\n    const normalizedX = (e.clientX - rect.left) / rect.width;\r\n    const normalizedY = (e.clientY - rect.top) / rect.height;\r\n    \r\n    // Update motion values\r\n    x.set(normalizedX - 0.5);  // Center at 0\r\n    y.set(normalizedY - 0.5);  // Center at 0\r\n    \r\n    // Update glare position\r\n    setGlarePosition({ x: normalizedX * 100, y: normalizedY * 100 });\r\n  };\r\n  \r\n  // Reset on mouse leave\r\n  const handleMouseLeave = () => {\r\n    x.set(0);\r\n    y.set(0);\r\n  };\r\n  \r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      className={`relative overflow-hidden ${bgColor} ${className} border ${borderColor} rounded-xl perspective-1000`}\r\n      style={{\r\n        rotateX,\r\n        rotateY,\r\n        transformStyle: 'preserve-3d',\r\n      }}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseLeave={handleMouseLeave}\r\n      whileHover={{ scale: 1.02 }}\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      {/* Glare effect */}\r\n      {glareIntensity > 0 && (\r\n        <div \r\n          className=\"absolute inset-0 pointer-events-none\"\r\n          style={{\r\n            background: `radial-gradient(circle at ${glarePosition.x}% ${glarePosition.y}%, \r\n              rgba(255, 255, 255, ${glareIntensity}), \r\n              transparent 40%)`,\r\n          }}\r\n        />\r\n      )}\r\n      \r\n      {/* Main content with 3D depth */}\r\n      <div \r\n        className=\"relative\"\r\n        style={{ transform: `translateZ(${depth}px)` }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\ninterface MagneticButtonProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  strength?: number;\r\n  radius?: number;\r\n  onClick?: () => void;\r\n}\r\n\r\n// Button with magnetic pull effect\r\nexport function MagneticButton({\r\n  children,\r\n  className = '',\r\n  strength = 40,\r\n  radius = 150,\r\n  onClick,\r\n}: MagneticButtonProps) {\r\n  // Motion values for the button position\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n  \r\n  // Add spring for smoother movement\r\n  const springConfig = { damping: 15, stiffness: 150 };\r\n  const springX = useSpring(x, springConfig);\r\n  const springY = useSpring(y, springConfig);\r\n  \r\n  // Reference for the button container\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n  \r\n  // Handle mouse move near the button\r\n  const handleMouseMove = (e: React.MouseEvent) => {\r\n    if (!ref.current) return;\r\n    \r\n    const { clientX, clientY } = e;\r\n    const { left, top, width, height } = ref.current.getBoundingClientRect();\r\n    \r\n    // Calculate center of the button\r\n    const centerX = left + width / 2;\r\n    const centerY = top + height / 2;\r\n    \r\n    // Calculate distance from mouse to center of button\r\n    const distanceX = clientX - centerX;\r\n    const distanceY = clientY - centerY;\r\n    const distance = Math.sqrt(distanceX ** 2 + distanceY ** 2);\r\n    \r\n    // Apply magnetic effect only when mouse is within radius\r\n    if (distance < radius) {\r\n      // Calculate pull strength based on distance (closer = stronger)\r\n      const pull = 1 - distance / radius;\r\n      \r\n      // Apply pull to position\r\n      x.set(distanceX * pull * (strength / 10));\r\n      y.set(distanceY * pull * (strength / 10));\r\n    } else {\r\n      // Reset position when mouse is far away\r\n      x.set(0);\r\n      y.set(0);\r\n    }\r\n  };\r\n  \r\n  // Reset position when mouse leaves\r\n  const handleMouseLeave = () => {\r\n    x.set(0);\r\n    y.set(0);\r\n  };\r\n  \r\n  return (\r\n    <div \r\n      className=\"relative\" \r\n      onMouseMove={handleMouseMove}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      <motion.button\r\n        ref={ref}\r\n        className={`relative ${className}`}\r\n        onClick={onClick}\r\n        style={{\r\n          x: springX,\r\n          y: springY,\r\n        }}\r\n        whileTap={{ scale: 0.98 }}\r\n      >\r\n        {children}\r\n      </motion.button>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface GlowBorderProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n  glowColor?: string;\r\n  hoverScale?: number;\r\n}\r\n\r\n// Element with animated glowing border on hover\r\nexport function GlowBorder({\r\n  children,\r\n  className = '',\r\n  glowColor = 'rgba(255, 140, 0, 0.9)',\r\n  hoverScale = 1.03,\r\n}: GlowBorderProps) {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  \r\n  return (\r\n    <motion.div\r\n      className={`relative rounded-xl overflow-hidden ${className}`}\r\n      onHoverStart={() => setIsHovered(true)}\r\n      onHoverEnd={() => setIsHovered(false)}\r\n      whileHover={{ scale: hoverScale }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {/* Glow border effect */}\r\n      <motion.div\r\n        className=\"absolute inset-0 rounded-xl pointer-events-none\"\r\n        initial={{ \r\n          boxShadow: `0 0 0 1px ${glowColor.replace('0.9', '0')}` \r\n        }}\r\n        animate={{ \r\n          boxShadow: isHovered \r\n            ? `0 0 30px 5px ${glowColor}, 0 0 0 2px ${glowColor}`\r\n            : `0 0 0 1px ${glowColor.replace('0.9', '0')}`\r\n        }}\r\n        transition={{ duration: 0.4 }}\r\n      />\r\n      \r\n      {/* Content */}\r\n      <div className=\"relative z-10\">\r\n        {children}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/emmry/Documents/Jethro%20Solutions/jethro-website-1/src/app/animations-demo/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport HeroAnimation from '@/components/hero/hero-animation';\r\nimport AbstractBackground from '@/components/background/abstract-background';\r\nimport FinancialGraph from '@/components/data-viz/financial-graph';\r\nimport { FadeInSection, ParallaxSection, StaggeredChildren } from '@/components/animations/scroll-section';\r\nimport { HoverCard3D, MagneticButton, GlowBorder } from '@/components/animations/hover-effects';\r\n\r\nexport default function AnimationsDemo() {\r\n  return (\r\n    <div className=\"min-h-screen bg-soft-black text-soft-white\">\r\n      <h1 className=\"text-4xl font-serif text-center pt-10 pb-6\">3D & Animation Components</h1>\r\n      \r\n      {/* Hero Animation */}\r\n      <section className=\"mb-20\">\r\n        <h2 className=\"text-2xl font-mono mb-4 text-center\">Hero Animation</h2>\r\n        <HeroAnimation />\r\n      </section>\r\n      \r\n      {/* Abstract Background */}\r\n      <section className=\"mb-20\">\r\n        <h2 className=\"text-2xl font-mono mb-4 text-center\">Abstract Background</h2>\r\n        <AbstractBackground particleCount={3000} className=\"w-full h-[40vh]\" />\r\n      </section>\r\n      \r\n      {/* Financial Graph */}\r\n      <section className=\"mb-20\">\r\n        <h2 className=\"text-2xl font-mono mb-4 text-center\">Financial Data Visualization</h2>\r\n        <FinancialGraph className=\"w-full h-[50vh] max-w-4xl mx-auto\" />\r\n      </section>\r\n      \r\n      {/* Scroll Animations */}\r\n      <section className=\"mb-20\">\r\n        <h2 className=\"text-2xl font-mono mb-4 text-center\">Scroll Animations</h2>\r\n        \r\n        <div className=\"max-w-4xl mx-auto px-4\">\r\n          <FadeInSection className=\"bg-soft-black/30 border border-soft-tan/20 p-6 rounded-lg mb-8\">\r\n            <h3 className=\"text-xl font-sans mb-2\">Fade In Section</h3>\r\n            <p>This content fades in when scrolled into view.</p>\r\n          </FadeInSection>\r\n          \r\n          <ParallaxSection className=\"h-[30vh] mb-8\">\r\n            <div className=\"bg-soft-black/30 border border-soft-tan/20 p-6 rounded-lg h-full flex items-center justify-center\">\r\n              <h3 className=\"text-xl font-sans\">Parallax Section</h3>\r\n            </div>\r\n          </ParallaxSection>\r\n          \r\n          <StaggeredChildren\r\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8\"\r\n            childClassName=\"h-full\"\r\n          >\r\n            {[1, 2, 3].map((item) => (\r\n              <div key={item} className=\"bg-soft-black/30 border border-soft-tan/20 p-6 rounded-lg h-full\">\r\n                <h3 className=\"text-xl font-sans mb-2\">Item {item}</h3>\r\n                <p>This item animates in sequence with the others.</p>\r\n              </div>\r\n            ))}\r\n          </StaggeredChildren>\r\n        </div>\r\n      </section>\r\n      \r\n      {/* Hover Effects */}\r\n      <section className=\"mb-20\">\r\n        <h2 className=\"text-2xl font-mono mb-4 text-center\">Hover Effects</h2>\r\n        \r\n        <div className=\"max-w-4xl mx-auto px-4 grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n          <div>\r\n            <h3 className=\"text-xl font-sans mb-4\">3D Hover Card</h3>\r\n            <HoverCard3D className=\"p-6\">\r\n              <h4 className=\"text-lg font-sans mb-2\">3D Card Effect</h4>\r\n              <p>Hover over this card to see the 3D tilt effect with glare.</p>\r\n            </HoverCard3D>\r\n          </div>\r\n          \r\n          <div>\r\n            <h3 className=\"text-xl font-sans mb-4\">Magnetic Button</h3>\r\n            <div className=\"flex justify-center items-center h-40\">\r\n              <MagneticButton className=\"bg-soft-tan text-soft-black py-3 px-6 rounded-full font-mono\">\r\n                Magnetic Button\r\n              </MagneticButton>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"md:col-span-2\">\r\n            <h3 className=\"text-xl font-sans mb-4\">Glow Border</h3>\r\n            <GlowBorder>\r\n              <div className=\"bg-soft-black/70 p-8 text-center\">\r\n                <h4 className=\"text-lg font-sans mb-2\">Glow Effect</h4>\r\n                <p>Hover to see the glowing border effect.</p>\r\n              </div>\r\n            </GlowBorder>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAG3D,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC,+IAAA,CAAA,UAAa;;;;;;;;;;;0BAIhB,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC,0JAAA,CAAA,UAAkB;wBAAC,eAAe;wBAAM,WAAU;;;;;;;;;;;;0BAIrD,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC,uJAAA,CAAA,UAAc;wBAAC,WAAU;;;;;;;;;;;;0BAI5B,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAEpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,qJAAA,CAAA,gBAAa;gCAAC,WAAU;;kDACvB,8OAAC;wCAAG,WAAU;kDAAyB;;;;;;kDACvC,8OAAC;kDAAE;;;;;;;;;;;;0CAGL,8OAAC,qJAAA,CAAA,kBAAe;gCAAC,WAAU;0CACzB,cAAA,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAG,WAAU;kDAAoB;;;;;;;;;;;;;;;;0CAItC,8OAAC,qJAAA,CAAA,oBAAiB;gCAChB,WAAU;gCACV,gBAAe;0CAEd;oCAAC;oCAAG;oCAAG;iCAAE,CAAC,GAAG,CAAC,CAAC,qBACd,8OAAC;wCAAe,WAAU;;0DACxB,8OAAC;gDAAG,WAAU;;oDAAyB;oDAAM;;;;;;;0DAC7C,8OAAC;0DAAE;;;;;;;uCAFK;;;;;;;;;;;;;;;;;;;;;;0BAUlB,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCAEpD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyB;;;;;;kDACvC,8OAAC,oJAAA,CAAA,cAAW;wCAAC,WAAU;;0DACrB,8OAAC;gDAAG,WAAU;0DAAyB;;;;;;0DACvC,8OAAC;0DAAE;;;;;;;;;;;;;;;;;;0CAIP,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAyB;;;;;;kDACvC,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,oJAAA,CAAA,iBAAc;4CAAC,WAAU;sDAA+D;;;;;;;;;;;;;;;;;0CAM7F,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDAAyB;;;;;;kDACvC,8OAAC,oJAAA,CAAA,aAAU;kDACT,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAAyB;;;;;;8DACvC,8OAAC;8DAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQnB","debugId":null}}]
}